@page "/fetchdata"
@using FooBar.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<CascadingAuthenticationState>
  <AuthorizeView>
    <Authorized>
      @if (forecasts == null)
      {
        <p><em>Loading...</em></p>
      }
      else
      {
        <table class="table">
          <thead>
            <tr>
              <th>Date</th>
              <th>Temp. (C)</th>
              <th>Temp. (F)</th>
              <th>Summary</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var forecast in forecasts)
            {
              <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
              </tr>
            }
          </tbody>
        </table>
      }
    </Authorized>
    <NotAuthorized>
      <p>You're not authorized to see this page.</p>
    </NotAuthorized>
  </AuthorizeView>
</CascadingAuthenticationState>

@code {
  private WeatherForecast[]? forecasts;

  protected override async Task OnInitializedAsync()
  {
    try {
      forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    } catch (Exception e) {
      // Likely an HttpRequestException (401) if not authenticated
      Console.WriteLine(e);
    }
  }
}
